// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[mutagen config import --help] should print import usage: import usage 1`] = `
Object {
  "stderr": "",
  "stdout": "Usage: import [-?] [--auto-confirm] [--trust-insecure-certificate] inputFile
[INCUBATION] Import configuration objects.
      inputFile               Input configuration file.
      --auto-confirm          Skip interactive approval before applying.
      --trust-insecure-certificate
                              Don't validate the server's TLS certificate.
  -?, -h, --help              Show this help message.
",
}
`;

exports[`[mutagen config import file] should create multiple objects of different types: every object has been created 1`] = `
Object {
  "stderr": "",
  "stdout": "+ physicalswitch [MultiObjectImportPhysicalSwitch1]
+ physicalswitch [MultiObjectImportPhysicalSwitch2]
+ switch [Environment/MultiObjectImportSwitch1]
+ switch [Environment/MultiObjectImportSwitch2]
+ switch [Environment/MultiObjectImportSwitch3]
+ dn [number: '123', switch: 'MultiObjectImportSwitch1', type: 'Extension', name: 'MultiObjectImportDN', tenant: 'Environment']
Completed. 6 object(s) imported.
",
}
`;

exports[`[mutagen config import file] should import objects even if there are dependency cycles between objects: all objects have been created 1`] = `
Object {
  "stderr": "",
  "stdout": "+ physicalswitch [CycleConfigPhysicalSwitch]
+ tenant [CycleConfigTenant]
+ script [CycleConfigTenant/CycleConfigScript]
~ tenant [CycleConfigTenant]
Completed. 3 object(s) imported.
",
}
`;

exports[`[mutagen config import file] should import the objects if the user confirms the changes: changes applied 1`] = `
Object {
  "stderr": "",
  "stdout": "The following changes are going to be applied:
+ physicalswitch [AcceptChangesPhysicalSwitch]
  {
    \\"name\\" : \\"AcceptChangesPhysicalSwitch\\",
    \\"state\\" : \\"enabled\\",
    \\"type\\" : \\"fujitsu\\"
  }
+ switch [Environment/AcceptChangesSwitch]
  {
    \\"dnRange\\" : \\"74233-74244, 74290\\",
    \\"linkType\\" : \\"madgelink\\",
    \\"name\\" : \\"AcceptChangesSwitch\\",
    \\"physicalSwitch\\" : \\"AcceptChangesPhysicalSwitch\\",
    \\"state\\" : \\"enabled\\",
    \\"switchAccessCodes\\" : [ ],
    \\"tenant\\" : \\"Environment\\"
  }
+ dn [number: '123', switch: 'AcceptChangesSwitch', type: 'Extension', name: 'AcceptChangesDN', tenant: 'Environment']
  {
    \\"name\\" : \\"AcceptChangesDN\\",
    \\"number\\" : \\"123\\",
    \\"routeType\\" : \\"default\\",
    \\"state\\" : \\"enabled\\",
    \\"switch\\" : \\"AcceptChangesSwitch\\",
    \\"switchSpecificType\\" : 1,
    \\"tenant\\" : \\"Environment\\",
    \\"trunks\\" : 1,
    \\"type\\" : \\"Extension\\",
    \\"useOverride\\" : true
  }

Please confirm [y|n]: + physicalswitch [AcceptChangesPhysicalSwitch]
+ switch [Environment/AcceptChangesSwitch]
+ dn [number: '123', switch: 'AcceptChangesSwitch', type: 'Extension', name: 'AcceptChangesDN', tenant: 'Environment']
Completed. 3 object(s) imported.
",
}
`;

exports[`[mutagen config import file] should not import any objects if some dependencies cannot be resolved and some mandatory properties for creation are missing: found missing dependencies and properties 1`] = `
Object {
  "stderr": "Validation failed.
Missing properties:
  - enumerator [Environment/emptyCfgObjectTest]:
    - displayName
    - type
Missing dependencies:
  - tenant [MissingDependencyTenant1]:
    - script [MissingDependencyTenant1/NonExistingScript1]
  - tenant [MissingDependencyTenant2]:
    - script [MissingDependencyTenant2/NonExistingScript2]
",
  "stdout": "",
}
`;

exports[`[mutagen config import file] should not import any objects if some dependencies cannot be resolved: found missing dependency 1`] = `
Object {
  "stderr": "Validation failed.
Missing dependencies:
  - tenant [MissingDependencyTenant1]:
    - script [MissingDependencyTenant1/NonExistingScript1]
  - tenant [MissingDependencyTenant2]:
    - script [MissingDependencyTenant2/NonExistingScript2]
",
  "stdout": "",
}
`;

exports[`[mutagen config import file] should not import the object if it has an invalid tenant: no object has been imported 1`] = `
Object {
  "stderr": "Validation failed.
Missing dependencies:
  - switch [Invalid tenant/switchWithInvalidTenant]:
    - tenant [Invalid tenant]
",
  "stdout": "",
}
`;

exports[`[mutagen config import file] should not import the objects if the user does not confirm the changes: changes not applied 1`] = `
Object {
  "stderr": "",
  "stdout": "The following changes are going to be applied:
+ physicalswitch [RejectChangesPhysicalSwitch]
  {
    \\"name\\" : \\"RejectChangesPhysicalSwitch\\",
    \\"state\\" : \\"enabled\\",
    \\"type\\" : \\"fujitsu\\"
  }
+ switch [Environment/RejectChangesSwitch]
  {
    \\"dnRange\\" : \\"74233-74244, 74290\\",
    \\"linkType\\" : \\"madgelink\\",
    \\"name\\" : \\"RejectChangesSwitch\\",
    \\"physicalSwitch\\" : \\"RejectChangesPhysicalSwitch\\",
    \\"state\\" : \\"enabled\\",
    \\"switchAccessCodes\\" : [ ],
    \\"tenant\\" : \\"Environment\\"
  }
+ dn [number: '123', switch: 'RejectChangesSwitch', type: 'Extension', name: 'RejectChangesDN', tenant: 'Environment']
  {
    \\"name\\" : \\"RejectChangesDN\\",
    \\"number\\" : \\"123\\",
    \\"routeType\\" : \\"default\\",
    \\"state\\" : \\"enabled\\",
    \\"switch\\" : \\"RejectChangesSwitch\\",
    \\"switchSpecificType\\" : 1,
    \\"tenant\\" : \\"Environment\\",
    \\"trunks\\" : 1,
    \\"type\\" : \\"Extension\\",
    \\"useOverride\\" : true
  }

Please confirm [y|n]: Import cancelled.
",
}
`;

exports[`[mutagen config import file] should only import objects with a unique key: only one object with the key has been imported 1`] = `
Object {
  "stderr": "",
  "stdout": "+ switch [Environment/sameSwitch]
Completed. 1 object(s) imported.
",
}
`;

exports[`[mutagen config import file] should update multiple objects of different types: every object has been updated 1`] = `
Object {
  "stderr": "",
  "stdout": "~ dn [number: '123', switch: 'MultiObjectImportSwitch1', type: 'Extension', name: 'MultiObjectImportDN', tenant: 'Environment']
~ physicalswitch [MultiObjectImportPhysicalSwitch1]
~ physicalswitch [MultiObjectImportPhysicalSwitch2]
~ switch [Environment/MultiObjectImportSwitch1]
~ switch [Environment/MultiObjectImportSwitch2]
~ switch [Environment/MultiObjectImportSwitch3]
Completed. 6 object(s) imported.
",
}
`;

exports[`[mutagen config import] should fail when file to import does not exist: no such file or directory 1`] = `
Object {
  "stderr": "/tmp/foo (No such file or directory)
",
  "stdout": "",
}
`;
