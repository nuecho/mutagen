# We redirect the gradle user home using -g so that it caches the
# wrapper and dependencies.
# https://docs.gradle.org/current/userguide/gradle_command_line.html
#
# Unfortunately it also caches the build output so
# cleaning removes reminants of any cached builds.
# The assemble task actually builds the project.
# If it fails here, the tests can't run.
#

stages:
  - check
  - build
  - test
  - release
  - publish

before_script:
  - "TAG=$CI_BUILD_TAG source ./ci/version.sh"

check:shell:
  tags:
    - dind
  stage: check
  services:
    - docker:dind
  script:
    - "docker run -v \"$PWD:/mnt\" koalaman/shellcheck:v0.4.6 **/*.sh"

check:commitlint:
  stage: check
  image: dr.s.nuecho.com/commitlint
  script:
    - lint-commits

build:
  stage: build
  script:
    - ./gradlew -g /cache/.gradle clean assemble

build:changelog:
  stage: build
  image: dr.s.nuecho.com/conventional-changelog
  script:
    - "conventional-changelog -n /preset/index.js -r 2 > generated_changelog.md"
    - "cat generated_changelog.md"
  artifacts:
    paths:
      - generated_changelog.md
    expire_in: 1 week

test:
  stage: test
  script:
    - ./gradlew -g /cache/.gradle check --continue --stacktrace
  artifacts:
    when: on_failure
    paths:
      - build/reports/

release:binaries:
  variables:
    RELEASE_PATH: "build/releases/"
  stage: release
  script:
    - ./gradlew -g /cache/.gradle -Pversion=${VERSION} release
    - mkdir -p ${RELEASE_PATH}/windows ${RELEASE_PATH}/unix
    - cp build/mutagen ${RELEASE_PATH}/unix/
    - cp build/launch4j/mutagen.exe ${RELEASE_PATH}/windows/
    - cd ${RELEASE_PATH}/unix/ && sha1sum mutagen > mutagen.sha1 && cd -
    - cd ${RELEASE_PATH}/windows/ && sha1sum mutagen.exe > mutagen.exe.sha1 && cd -
  artifacts:
    paths:
      - build/releases
  only:
    - tags

publish:s3:
  variables:
    BUCKET_NAME: "nuecho.com-mutagen-releases"
    BUCKET_URL: "s3://${BUCKET_NAME}"
  image: "xueshanf/awscli"
  stage: publish
  dependencies:
    - release:binaries
  script:
    - export AWS_ACCESS_KEY_ID=${CI_AWS_ACCESS_KEY_ID}
    - export AWS_SECRET_ACCESS_KEY=${CI_AWS_SECRET_ACCESS_KEY}
    - export AWS_REGION=us-east-1
    - echo "${BUCKET_URL}"
    - aws s3 sync build/releases "${BUCKET_URL}/${VERSION}" --acl public-read
  only:
    - tags

publish:changelog:
  stage: publish
  dependencies:
    - build:changelog
  variables:
    URL: "http://gl.s.nuecho.com/api/v3/projects/${CI_PROJECT_ID}/repository/tags/${CI_COMMIT_TAG}/release?private_token=${CI_TOKEN}"
  image: governmentpaas/curl-ssl
  script:
    - "echo ${URL}"
    - "curl -X POST --silent --data-urlencode description@generated_changelog.md ${URL}"      
  only:
    - tags
