# We redirect the gradle user home using -g so that it caches the
# wrapper and dependencies.
# https://docs.gradle.org/current/userguide/gradle_command_line.html
#
# Unfortunately it also caches the build output so
# cleaning removes reminants of any cached builds.
# The assemble task actually builds the project.
# If it fails here, the tests can't run.
#

stages:
  - check
  - build
  - test
  - package
  - acceptance
  - publish

variables:
  GENESYS_PSDK_MAVEN_URL: "http://knox.s.nuecho.com/artifactory/repo"
  RELEASE_PATH: "build/releases"

check:shell:
  image: "rdeavila/docker-shellcheck"
  stage: check
  script:
    - "shellcheck **/*.sh"

check:commitlint:
  stage: check
  image: dr.s.nuecho.com/commitlint
  script:
    - lint-commits

build:
  before_script:
    - "TAG=$CI_BUILD_TAG source ./ci/version.sh"
  stage: build
  script:
    - ./gradlew -g /cache/.gradle clean assemble

test:
  stage: test
  script:
    - ./gradlew -g /cache/.gradle check --continue --stacktrace
  artifacts:
    when: on_failure
    paths:
      - build/reports/

package:binaries:
  before_script:
    - "TAG=$CI_BUILD_TAG source ./ci/version.sh"
  stage: package
  script:
    - ./gradlew -g /cache/.gradle -Pversion=${VERSION} release
    - mkdir -p ${RELEASE_PATH}/windows ${RELEASE_PATH}/unix
    - cp build/mutagen ${RELEASE_PATH}/unix/
    - cp build/launch4j/mutagen.exe ${RELEASE_PATH}/windows/
    - cd ${RELEASE_PATH}/unix/ && sha1sum mutagen > mutagen.sha1 && cd -
    - cd ${RELEASE_PATH}/windows/ && sha1sum mutagen.exe > mutagen.exe.sha1 && cd -
    - echo -n "${VERSION}" > .version
  artifacts:
    paths:
      - build/releases
      - .version

package:changelog:
  before_script:
    - "TAG=$CI_BUILD_TAG source ./ci/version.sh"
  stage: package
  image: dr.s.nuecho.com/conventional-changelog
  script:
    - mkdir -p $RELEASE_PATH
    - conventional-changelog -n /preset/index.js -r 2 > $RELEASE_PATH/changelog.md
    - cat $RELEASE_PATH/changelog.md
  artifacts:
    paths:
      - $RELEASE_PATH/changelog.md
    expire_in: 1 week
  only:
    - master
    - tags

acceptance:windows:
  variables:
    RELEASE_PATH: "build\\releases"
  stage: acceptance
  tags:
    - windows
  script:
    - "%RELEASE_PATH%\\windows\\mutagen.exe -h"
  only:
    - master
    - tags

acceptance:test:
  image: tmaier/docker-compose:latest
  stage: acceptance
  tags:
    - dind
  services:
    - docker:dind
  dependencies:
    - package:binaries
  before_script:
    - VERSION=$(cat .version)
    - export COMPOSE_HTTP_TIMEOUT=300 # 5m. This is sort of slow to execute on a gitlab-runner
  script:
    - chmod 0755 $RELEASE_PATH/unix/mutagen
    - cd docker 
    - docker-compose -f docker-compose.yml -f docker-compose.ci.yml run test
  after_script:
    - cd docker && docker-compose down -v

acceptance:manual:
  stage: acceptance
  dependencies:
    - package:binaries
  script:
    - echo "manual testing time!"
  when: manual
  allow_failure: false
  only:
    - tags

publish:canary:
  before_script:
    - "TAG=$CI_BUILD_TAG source ./ci/version.sh"
  variables:
    BUCKET_NAME: "nuecho.com-mutagen-releases"
    BUCKET_URL: "s3://${BUCKET_NAME}"
  image: "xueshanf/awscli"
  stage: publish
  dependencies:
    - package:binaries
  script:
    - export AWS_ACCESS_KEY_ID=${CI_AWS_ACCESS_KEY_ID}
    - export AWS_SECRET_ACCESS_KEY=${CI_AWS_SECRET_ACCESS_KEY}
    - export AWS_REGION=us-east-1
    - aws s3 sync build/releases "${BUCKET_URL}/canary" --acl public-read --metadata version=${VERSION}
  only:
    - master

publish:stable:
  before_script:
    - "TAG=$CI_BUILD_TAG source ./ci/version.sh"
  variables:
    BUCKET_NAME: "nuecho.com-mutagen-releases"
    BUCKET_URL: "s3://${BUCKET_NAME}"
  image: "xueshanf/awscli"
  stage: publish
  dependencies:
    - package:binaries
  script:
    - export AWS_ACCESS_KEY_ID=${CI_AWS_ACCESS_KEY_ID}
    - export AWS_SECRET_ACCESS_KEY=${CI_AWS_SECRET_ACCESS_KEY}
    - export AWS_REGION=us-east-1
    - aws s3 sync build/releases "${BUCKET_URL}/${VERSION}" --acl public-read --metadata version=${VERSION}
    - aws s3 sync build/releases "${BUCKET_URL}/latest" --acl public-read --metadata version=${VERSION}
  only:
    - tags

publish:changelog:
  before_script:
    - "TAG=$CI_BUILD_TAG source ./ci/version.sh"
  stage: publish
  dependencies:
    - package:changelog
  variables:
    URL: "http://gl.s.nuecho.com/api/v3/projects/${CI_PROJECT_ID}/repository/tags/${CI_COMMIT_TAG}/release?private_token=${CI_TOKEN}"
  image: governmentpaas/curl-ssl
  script:
    - "curl -X POST --silent --data-urlencode description@$RELEASE_PATH/changelog.md ${URL}"
  only:
    - tags
